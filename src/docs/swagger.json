{
    "swagger": "2.0",
    "info": {
        "title": "Database System Design Project",
        "contact": {
            "name": "Maintainer Polaris",
            "email": "polaris@fduhole.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "basePath": "/api",
    "paths": {
        "/api/commodities": {
            "put": {
                "description": "更新商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "商品"
                ],
                "summary": "更新商品",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Commodity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "添加商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "商品"
                ],
                "summary": "添加商品",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commodity.CreateCommodityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "商品"
                ],
                "summary": "删除商品",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commodity id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/commodities/all": {
            "get": {
                "description": "获取所有商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "商品"
                ],
                "summary": "获取所有商品",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Commodity"
                        }
                    }
                }
            }
        },
        "/api/commodity/all": {
            "get": {
                "description": "获取所有商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "获取所有商品",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CommodityItem"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/commodity/item": {
            "put": {
                "description": "更新商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "更新商品",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.UpdateItemModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "添加商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "添加商品",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.CreateItemModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "删除商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "删除商品",
                "parameters": [
                    {
                        "type": "string",
                        "description": "commodity id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/commodity/item/batch": {
            "post": {
                "description": "批量添加商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "批量添加商品",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/item.CreateItemModel"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/favorites": {
            "post": {
                "description": "AddFavorite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "AddFavorite",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favorite.AddFavoriteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/favorites/all": {
            "get": {
                "description": "GetAllFavorites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "GetAllFavorites",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Favorite"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/favorites/commodity": {
            "post": {
                "description": "AddCommodityFavorite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "AddCommodityFavorite",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favorite.AddCommodityFavoriteModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/favorites/{id}": {
            "delete": {
                "description": "DeleteFavorite",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "DeleteFavorite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "item id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/messages": {
            "get": {
                "description": "Get all messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message"
                ],
                "summary": "Get all messages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Message"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/platform": {
            "put": {
                "description": "Update platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "Update platform",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Platform"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "Add platform",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/platform.CreatePlatformRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "Delete platform",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "platform id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/platform/all": {
            "get": {
                "description": "Get all platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "Get all platform",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Platform"
                            }
                        }
                    }
                }
            }
        },
        "/api/price/history": {
            "put": {
                "description": "Update priceChange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PriceChange"
                ],
                "summary": "Update priceChange",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/priceChange.UpdatePriceChangeModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Get priceChange by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PriceChange"
                ],
                "summary": "Get priceChange by ID",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/priceChange.GetPriceChangeModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PriceChange"
                            }
                        }
                    }
                }
            }
        },
        "/api/price/history/batch": {
            "post": {
                "description": "Add batch priceChange",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PriceChange"
                ],
                "summary": "Add batch priceChange",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PriceChange"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/price/limit": {
            "post": {
                "description": "AddPriceLimit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Favorite"
                ],
                "summary": "AddPriceLimit",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favorite.PriceLimitModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/search": {
            "post": {
                "description": "搜索商品",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "搜索商品",
                "parameters": [
                    {
                        "description": "Range: name, category; Search: content to search",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/item.SearchQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CommodityItem"
                            }
                        }
                    }
                }
            }
        },
        "/api/sellers": {
            "put": {
                "description": "Update seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Update seller",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Seller"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Add seller",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.CreateSellerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Delete seller",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "seller id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/sellers/all": {
            "get": {
                "description": "Get all sellers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Get all sellers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Seller"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/sellers/data": {
            "get": {
                "description": "Get seller info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller"
                ],
                "summary": "Get seller info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Seller"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Add user",
                "parameters": [
                    {
                        "description": "json",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/users/all": {
            "get": {
                "description": "Get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        },
        "/api/users/data": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "type",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 3
                },
                "type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "commodity.CreateCommodityRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "default_name": {
                    "type": "string"
                },
                "produce_address": {
                    "type": "string"
                },
                "produce_at": {
                    "type": "string"
                }
            }
        },
        "common.ErrorDetailElement": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "struct_field": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "common.HttpError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.ErrorDetailElement"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "favorite.AddCommodityFavoriteModel": {
            "type": "object",
            "required": [
                "commodity_id"
            ],
            "properties": {
                "commodity_id": {
                    "type": "integer"
                }
            }
        },
        "favorite.AddFavoriteModel": {
            "type": "object",
            "required": [
                "item_id"
            ],
            "properties": {
                "item_id": {
                    "type": "integer"
                }
            }
        },
        "favorite.PriceLimitModel": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "integer"
                },
                "price_limit": {
                    "type": "number"
                }
            }
        },
        "item.CreateItemModel": {
            "type": "object",
            "required": [
                "commodity_id",
                "item_name",
                "platform_id",
                "price"
            ],
            "properties": {
                "commodity_id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "platform_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "item.SearchQuery": {
            "type": "object",
            "properties": {
                "accurate": {
                    "type": "boolean"
                },
                "range": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                }
            }
        },
        "item.UpdateItemModel": {
            "type": "object",
            "required": [
                "commodity_item_id",
                "item_name",
                "price"
            ],
            "properties": {
                "commodity_item_id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.Commodity": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "default_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "produce_address": {
                    "type": "string"
                },
                "produce_at": {
                    "$ref": "#/definitions/models.MyTime"
                }
            }
        },
        "models.CommodityItem": {
            "type": "object",
            "properties": {
                "commodity": {
                    "$ref": "#/definitions/models.Commodity"
                },
                "commodity_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "item_name": {
                    "type": "string"
                },
                "platform": {
                    "$ref": "#/definitions/models.Platform"
                },
                "platform_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "seller": {
                    "$ref": "#/definitions/models.Seller"
                },
                "seller_id": {
                    "type": "integer"
                },
                "update_at": {
                    "$ref": "#/definitions/models.MyTime"
                }
            }
        },
        "models.Favorite": {
            "type": "object",
            "properties": {
                "commodityItem": {
                    "$ref": "#/definitions/models.CommodityItem"
                },
                "commodity_item_id": {
                    "type": "integer"
                },
                "price_limit": {
                    "type": "number"
                },
                "update_at": {
                    "$ref": "#/definitions/models.MyTime"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "commodityItem": {
                    "$ref": "#/definitions/models.CommodityItem"
                },
                "commodity_item_id": {
                    "description": "如果不constraint join时要注意",
                    "type": "integer"
                },
                "create_at": {
                    "$ref": "#/definitions/models.MyTime"
                },
                "current_price": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.MyTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "models.Platform": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.PriceChange": {
            "type": "object",
            "properties": {
                "commodityItem": {
                    "$ref": "#/definitions/models.CommodityItem"
                },
                "commodity_item_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "new_price": {
                    "type": "number"
                },
                "update_at": {
                    "$ref": "#/definitions/models.MyTime"
                }
            }
        },
        "models.Seller": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Age      int",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "platform.CreatePlatformRequest": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "priceChange.GetPriceChangeModel": {
            "type": "object",
            "required": [
                "commodity_item_id",
                "time_end",
                "time_start"
            ],
            "properties": {
                "commodity_item_id": {
                    "type": "integer"
                },
                "time_end": {
                    "$ref": "#/definitions/models.MyTime"
                },
                "time_start": {
                    "$ref": "#/definitions/models.MyTime"
                }
            }
        },
        "priceChange.UpdatePriceChangeModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "new_price": {
                    "description": "CommodityItemID int     `json:\"commodity_item_id\"`",
                    "type": "number"
                }
            }
        },
        "seller.CreateSellerRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}